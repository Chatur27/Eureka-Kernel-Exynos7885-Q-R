/*
 * SAMSUNG EXYNOS7885 board camera device tree source
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/camera/fimc_is.h>

/ {
	fragment@camera {
		target-path = "/";
		__overlay__ {

			/* REAR CAMERA */
			fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
				compatible = "samsung,sensor-module-2p6";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk2_out>;
				pinctrl-2 = <&fimc_is_mclk2_fn>;
				pinctrl-3 = <>;

				use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */

				position = <0>;                   /* Rear:0. Front:1 */
				id = <0>;                         /* fimc_is_sensor id */
				mclk_ch = <2>;
				sensor_i2c_ch = <1>;
				sensor_i2c_addr = <0x5A>;

				gpio_mclk = <&gpc0 2 0x1>;        /* RCAM1_MCLK : XCI2_MCLK */
				gpio_reset = <&gpg3 4 0x1>;       /* RCAM1_RST_N : XGPIO24 */
				gpio_cam_af_en = <&gpg1 5 0x1>;    /* RCAM1_AFVDD_LDO_EN */
				status = "okay";

				af {
					product_name = <20>;         /* ACTUATOR_NAME_ZC535 */
					i2c_addr = <0x18>;
					i2c_ch = <3>;
				};

				flash {
					product_name = <11>;         /* FLADRV_NAME_DRV_FLASH_GPIO */
				};

				internal_vc {
					/* vc_list = <channel, data_type, buffer_offset>
					 * channel : Output VC channel
					 *  - Supported channels are 1(VC1), 2(VC2), 3(VC3)
					 *  - Since channel 0(VC0) is dedicated to image data, it can not be used

					 * data_type : Output type of VC channel
					 *  - Value 0 VC_NOTHING
					 *  - Value 1 VC_TAIL_MODE_PDAF
					 *  - Value 2 VC_MIPI_STAT
					 * buffer_offset : get_vc_dma_buf offset value of buffer to return when using interface

					 *  - Value 0 N buffer return
					 *  - Value 1 N-1 buffer return
					 */

					vc_list = <1 1 1>;
				};
			};

			/* FRONT CAMERA */
			fimc_is_sensor_3p8sp: fimc-is_sensor_3p8sp@20 {
				compatible = "samsung,sensor-module-3p8sp";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk1_out>;
				pinctrl-2 = <&fimc_is_mclk1_fn>;
				pinctrl-3 = <>;

				position = <1>;                 /* Rear:0. Front:1 */
				id = <1>;                       /* fimc_is_sensor id */
				mclk_ch = <1>;
				sensor_i2c_ch = <0>;
				sensor_i2c_addr = <0x20>;

				gpio_mclk = <&gpc0 1 0x1>;      /* FCAM_MCLK : XCI1_MCLK */
				gpio_reset = <&gpg3 5 0x1>;     /* FCAM_RST_N: XGPIO25 */
				status = "okay";
			};

			/* FRONT CAMERA2 */
			fimc_is_sensor_imx471: fimc-is_sensor_imx471@1A {
				compatible = "samsung,sensor-module-imx471";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk1_out>;
				pinctrl-2 = <&fimc_is_mclk1_fn>;
				pinctrl-3 = <>;

				position = <1>;                 /* Rear:0. Front:1 */
				id = <1>;                       /* fimc_is_sensor id */
				mclk_ch = <1>;
				sensor_i2c_ch = <0>;
				sensor_i2c_addr = <0x34>;

				gpio_mclk = <&gpc0 1 0x1>;      /* FCAM_MCLK : XCI1_MCLK */
				gpio_reset = <&gpg3 5 0x1>;     /* FCAM_RST_N: XGPIO25 */
				status = "okay";
			};

			/* REAR CAMERA2 : UW */
			fimc_is_sensor_5e9: fimc-is_sensor_5e9@20 {
				compatible = "samsung,sensor-module-5e9";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk0_out>;
				pinctrl-2 = <&fimc_is_mclk0_fn>;
				pinctrl-3 = <>;

				position = <2>;                 /* Rear2: 2 */
				id = <2>;                       /* fimc_is_sensor id */
				mclk_ch = <0>;
				sensor_i2c_ch = <2>;
				sensor_i2c_addr = <0x20>;

				gpio_mclk = <&gpc0 0 0x1>;      /* FCAM_MCLK : XCI0_MCLK */
				gpio_reset = <&gpg2 5 0x1>;     /* FCAM_RST_N: XGPIO17 */
				status = "okay";
			};

			fimc_is_flash_gpio: fimc-is-flash_gpio@0 {
				compatible = "samsung,sensor-flash-gpio";
				id = <0>;
				status = "okay";

				flash-gpio = <&gpg2 7 0>;
				torch-gpio = <&gpg1 7 0>;
			};

		}; /* end of __overlay__ */
	}; /* end of fragment */
}; /* end of root */


/***** reference symbol node *****/
&fimc_is {
	pinctrl-names = "default","release";
	pinctrl-0 = <&fimc_is_mclk0_out &fimc_is_mclk1_out &fimc_is_mclk2_out>;
	pinctrl-1 = <>;

	vender {
		rear_sensor_id = <58>;    /* S5K2P6 */
		front_sensor_id = <44>;   /* S5K3P8SP */
		rear2_sensor_id = <41>;   /* S5K5E9 */
		use_module_check;
		//skip_cal_loading;

		max_supported_camera = <3>;
		supported_cameraId = <0 1 50>;

		max_camera_num = <3>;
		camera_info0 {              /* 0 : rear - S5K2P6 */
			isp = <0>;             /* 0 : INT , 1 : EXT , 2 : SOC */
			cal_memory = <2>;      /* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
			read_version = <0>;    /* 0 : SYSFS , 1 : CAMON */
			core_voltage = <0>;    /* 0 : N , 1 : Y  */
			upgrade = <0>;         /* 0 : N , 1 : SYSFS , 2 : CAMON */
			companion = <0>;       /* 0 : N , 1 : Y  */
			ois = <0>;             /* 0 : N , 1 : Y  */
			valid = <1>;           /* 0 : INVALID, 1 : VALID */
			dual_open = <0>;       /* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			position = <0>;        /* 0 : Rear, 1:Front, 2:Rear2, 3:Front2, 4:Rear3 */
		};
		camera_info1 {              /* 1 : front1 - S5K3P8SP */
			isp = <0>;             /* 0 : INT , 1 : EXT , 2 : SOC */
			cal_memory = <2>;      /* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
			read_version = <0>;    /* 0 : SYSFS , 1 : CAMON */
			core_voltage = <0>;    /* 0 : N , 1 : Y  */
			upgrade = <0>;         /* 0 : N , 1 : SYSFS , 2 : CAMON */
			companion = <0>;       /* 0 : N , 1 : Y  */
			ois = <0>;             /* 0 : N , 1 : Y  */
			valid = <1>;           /* 0 : INVALID, 1 : VALID */
			dual_open = <0>;       /* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			position = <1>;        /* 0 : Rear, 1:Front, 2:Rear2, 3:Front2, 4:Rear3 */
		};
		camera_info2 {              /* 2 : rear2 - S5K5E9 */
			isp = <0>;             /* 0 : INT , 1 : EXT , 2 : SOC */
			cal_memory = <2>;      /* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
			read_version = <0>;    /* 0 : SYSFS , 1 : CAMON */
			core_voltage = <0>;    /* 0 : N , 1 : Y  */
			upgrade = <0>;         /* 0 : N , 1 : SYSFS , 2 : CAMON */
			companion = <0>;       /* 0 : N , 1 : Y  */
			ois = <0>;             /* 0 : N , 1 : Y  */
			valid = <1>;           /* 0 : INVALID, 1 : VALID */
			dual_open = <0>;       /* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			position = <2>;        /* 0 : Rear, 1:Front, 2:Rear2, 3:Front2, 4:Rear3 */
		};
	};

	fimc_is_dvfs {
		/* TODO: DVFS level set */
		#define DVFS_INT_L0 533000
		#define DVFS_INT_L1 333000
		#define DVFS_INT_L2 267000
		#define DVFS_INT_L3 133000
		#define DVFS_INT_L4 107000

		#define DVFS_CAM_L0 690000
		#define DVFS_CAM_L1 680000
		#define DVFS_CAM_L2 670000
		#define DVFS_CAM_L3 660000
		#define DVFS_CAM_L4 650000

		#define DVFS_MIF_L0 2093000
		#define DVFS_MIF_L1 2002000
		#define DVFS_MIF_L2 1794000
		#define DVFS_MIF_L3 1539000
		#define DVFS_MIF_L4 1352000
		#define DVFS_MIF_L5 1014000
		#define DVFS_MIF_L6 845000
		#define DVFS_MIF_L7 676000
		#define DVFS_MIF_L8 546000
		#define DVFS_MIF_L9 420000

		table0 {
			desc = "default";

			default_int = <DVFS_INT_L4>;
			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L0>;
			default_i2c = <0>;
			default_hpg = <1>;

			front_preview_int = <DVFS_INT_L4>;
			front_preview_cam = <DVFS_CAM_L2>;
			front_preview_mif = <DVFS_MIF_L4>;
			front_preview_i2c = <0>;
			front_preview_hpg = <1>;

			front_capture_int = <DVFS_INT_L4>;
			front_capture_cam = <DVFS_CAM_L1>;
			front_capture_mif = <DVFS_MIF_L4>;
			front_capture_i2c = <0>;
			front_capture_hpg = <1>;

			front_video_int = <DVFS_INT_L4>;
			front_video_cam = <DVFS_CAM_L2>;
			front_video_mif = <DVFS_MIF_L4>;
			front_video_i2c = <0>;
			front_video_hpg = <1>;

			front_vt1_int = <DVFS_INT_L4>;
			front_vt1_cam = <DVFS_CAM_L2>;
			front_vt1_mif = <DVFS_MIF_L5>;
			front_vt1_i2c = <0>;
			front_vt1_hpg = <1>;

			front_vt2_int = <DVFS_INT_L4>;
			front_vt2_cam = <DVFS_CAM_L2>;
			front_vt2_mif = <DVFS_MIF_L5>;
			front_vt2_i2c = <0>;
			front_vt2_hpg = <1>;

			front_vt4_int = <DVFS_INT_L4>;
			front_vt4_cam = <DVFS_CAM_L2>;
			front_vt4_mif = <DVFS_MIF_L5>;
			front_vt4_i2c = <0>;
			front_vt4_hpg = <1>;

			rear2_preview_fhd_int = <DVFS_INT_L4>;
			rear2_preview_fhd_cam = <DVFS_CAM_L3>;
			rear2_preview_fhd_mif = <DVFS_MIF_L4>;
			rear2_preview_fhd_i2c = <0>;
			rear2_preview_fhd_hpg = <1>;

			rear2_capture_int = <DVFS_INT_L4>;
			rear2_capture_cam = <DVFS_CAM_L3>;
			rear2_capture_mif = <DVFS_MIF_L3>;
			rear2_capture_i2c = <0>;
			rear2_capture_hpg = <1>;

			rear2_video_fhd_int = <DVFS_INT_L4>;
			rear2_video_fhd_cam = <DVFS_CAM_L3>;
			rear2_video_fhd_mif = <DVFS_MIF_L3>;
			rear2_video_fhd_i2c = <0>;
			rear2_video_fhd_hpg = <1>;

			rear2_video_fhd_capture_int = <DVFS_INT_L4>;
			rear2_video_fhd_capture_cam = <DVFS_CAM_L3>;
			rear2_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear2_video_fhd_capture_i2c = <0>;
			rear2_video_fhd_capture_hpg = <1>;

			rear_preview_fhd_int = <DVFS_INT_L4>;
			rear_preview_fhd_cam = <DVFS_CAM_L2>;
			rear_preview_fhd_mif = <DVFS_MIF_L4>;
			rear_preview_fhd_i2c = <0>;
			rear_preview_fhd_hpg = <1>;

			rear_capture_int = <DVFS_INT_L4>;
			rear_capture_cam = <DVFS_CAM_L1>;
			rear_capture_mif = <DVFS_MIF_L3>;
			rear_capture_i2c = <0>;
			rear_capture_hpg = <1>;

			rear_video_fhd_int = <DVFS_INT_L4>;
			rear_video_fhd_cam = <DVFS_CAM_L1>;
			rear_video_fhd_mif = <DVFS_MIF_L3>;
			rear_video_fhd_i2c = <0>;
			rear_video_fhd_hpg = <1>;

			rear_video_uhd_int = <DVFS_INT_L4>;
			rear_video_uhd_cam = <DVFS_CAM_L2>;
			rear_video_uhd_mif = <DVFS_MIF_L3>;
			rear_video_uhd_i2c = <0>;
			rear_video_uhd_hpg = <1>;

			rear_video_fhd_capture_int = <DVFS_INT_L4>;
			rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear_video_fhd_capture_i2c = <0>;
			rear_video_fhd_capture_hpg = <1>;

			rear_video_uhd_capture_int = <DVFS_INT_L4>;
			rear_video_uhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L2>;
			rear_video_uhd_capture_i2c = <0>;
			rear_video_uhd_capture_hpg = <1>;

			dual_preview_int = <DVFS_INT_L4>;
			dual_preview_cam = <DVFS_CAM_L2>;
			dual_preview_mif = <DVFS_MIF_L3>;
			dual_preview_i2c = <0>;
			dual_preview_hpg = <1>;

			dual_capture_int = <DVFS_INT_L4>;
			dual_capture_cam = <DVFS_CAM_L1>;
			dual_capture_mif = <DVFS_MIF_L2>;
			dual_capture_i2c = <0>;
			dual_capture_hpg = <1>;

			dual_video_int = <DVFS_INT_L4>;
			dual_video_cam = <DVFS_CAM_L2>;
			dual_video_mif = <DVFS_MIF_L2>;
			dual_video_i2c = <0>;
			dual_video_hpg = <1>;

			preview_high_speed_fps_int = <DVFS_INT_L4>;
			preview_high_speed_fps_cam = <DVFS_CAM_L2>;
			preview_high_speed_fps_mif = <DVFS_MIF_L4>;
			preview_high_speed_fps_i2c = <0>;
			preview_high_speed_fps_hpg = <1>;

			video_high_speed_60fps_int = <DVFS_INT_L4>;
			video_high_speed_60fps_cam = <DVFS_CAM_L2>;
			video_high_speed_60fps_mif = <DVFS_MIF_L4>;
			video_high_speed_60fps_i2c = <0>;
			video_high_speed_60fps_hpg = <1>;

			video_high_speed_120fps_int = <DVFS_INT_L4>;
			video_high_speed_120fps_cam = <DVFS_CAM_L2>;
			video_high_speed_120fps_mif = <DVFS_MIF_L4>;
			video_high_speed_120fps_i2c = <0>;
			video_high_speed_120fps_hpg = <6>;

			max_int = <DVFS_INT_L4>;
			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L0>;
			max_i2c = <0>;
			max_hpg = <1>;
		};

		table1 {
			desc = "DVFS table for HAL3";

			default_int = <DVFS_INT_L4>;
			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L0>;
			default_i2c = <0>;
			default_hpg = <1>;

			front_preview_int = <DVFS_INT_L4>;
			front_preview_cam = <DVFS_CAM_L2>;
			front_preview_mif = <DVFS_MIF_L4>;
			front_preview_i2c = <0>;
			front_preview_hpg = <1>;

			front_capture_int = <DVFS_INT_L4>;
			front_capture_cam = <DVFS_CAM_L1>;
			front_capture_mif = <DVFS_MIF_L4>;
			front_capture_i2c = <0>;
			front_capture_hpg = <1>;

			front_video_int = <DVFS_INT_L4>;
			front_video_cam = <DVFS_CAM_L2>;
			front_video_mif = <DVFS_MIF_L4>;
			front_video_i2c = <0>;
			front_video_hpg = <1>;

			front_vt1_int = <DVFS_INT_L4>;
			front_vt1_cam = <DVFS_CAM_L2>;
			front_vt1_mif = <DVFS_MIF_L5>;
			front_vt1_i2c = <0>;
			front_vt1_hpg = <1>;

			front_vt2_int = <DVFS_INT_L4>;
			front_vt2_cam = <DVFS_CAM_L2>;
			front_vt2_mif = <DVFS_MIF_L5>;
			front_vt2_i2c = <0>;
			front_vt2_hpg = <1>;

			front_vt4_int = <DVFS_INT_L4>;
			front_vt4_cam = <DVFS_CAM_L2>;
			front_vt4_mif = <DVFS_MIF_L5>;
			front_vt4_i2c = <0>;
			front_vt4_hpg = <1>;

			rear2_preview_fhd_int = <DVFS_INT_L4>;
			rear2_preview_fhd_cam = <DVFS_CAM_L3>;
			rear2_preview_fhd_mif = <DVFS_MIF_L4>;
			rear2_preview_fhd_i2c = <0>;
			rear2_preview_fhd_hpg = <1>;

			rear2_capture_int = <DVFS_INT_L4>;
			rear2_capture_cam = <DVFS_CAM_L3>;
			rear2_capture_mif = <DVFS_MIF_L3>;
			rear2_capture_i2c = <0>;
			rear2_capture_hpg = <1>;

			rear2_video_fhd_int = <DVFS_INT_L4>;
			rear2_video_fhd_cam = <DVFS_CAM_L3>;
			rear2_video_fhd_mif = <DVFS_MIF_L3>;
			rear2_video_fhd_i2c = <0>;
			rear2_video_fhd_hpg = <1>;

			rear2_video_fhd_capture_int = <DVFS_INT_L4>;
			rear2_video_fhd_capture_cam = <DVFS_CAM_L3>;
			rear2_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear2_video_fhd_capture_i2c = <0>;
			rear2_video_fhd_capture_hpg = <1>;

			rear_preview_fhd_int = <DVFS_INT_L4>;
			rear_preview_fhd_cam = <DVFS_CAM_L2>;
			rear_preview_fhd_mif = <DVFS_MIF_L4>;
			rear_preview_fhd_i2c = <0>;
			rear_preview_fhd_hpg = <1>;

			rear_capture_int = <DVFS_INT_L4>;
			rear_capture_cam = <DVFS_CAM_L0>;
			rear_capture_mif = <DVFS_MIF_L2>;
			rear_capture_i2c = <0>;
			rear_capture_hpg = <1>;

			rear_video_fhd_int = <DVFS_INT_L4>;
			rear_video_fhd_cam = <DVFS_CAM_L2>;
			rear_video_fhd_mif = <DVFS_MIF_L3>;
			rear_video_fhd_i2c = <0>;
			rear_video_fhd_hpg = <1>;

			rear_video_uhd_int = <DVFS_INT_L4>;
			rear_video_uhd_cam = <DVFS_CAM_L2>;
			rear_video_uhd_mif = <DVFS_MIF_L3>;
			rear_video_uhd_i2c = <0>;
			rear_video_uhd_hpg = <1>;

			rear_video_fhd_capture_int = <DVFS_INT_L4>;
			rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear_video_fhd_capture_i2c = <0>;
			rear_video_fhd_capture_hpg = <1>;

			rear_video_uhd_capture_int = <DVFS_INT_L4>;
			rear_video_uhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L2>;
			rear_video_uhd_capture_i2c = <0>;
			rear_video_uhd_capture_hpg = <1>;

			dual_preview_int = <DVFS_INT_L4>;
			dual_preview_cam = <DVFS_CAM_L2>;
			dual_preview_mif = <DVFS_MIF_L3>;
			dual_preview_i2c = <0>;
			dual_preview_hpg = <1>;

			dual_capture_int = <DVFS_INT_L4>;
			dual_capture_cam = <DVFS_CAM_L1>;
			dual_capture_mif = <DVFS_MIF_L2>;
			dual_capture_i2c = <0>;
			dual_capture_hpg = <1>;

			dual_video_int = <DVFS_INT_L4>;
			dual_video_cam = <DVFS_CAM_L2>;
			dual_video_mif = <DVFS_MIF_L2>;
			dual_video_i2c = <0>;
			dual_video_hpg = <1>;

			preview_high_speed_fps_int = <DVFS_INT_L4>;
			preview_high_speed_fps_cam = <DVFS_CAM_L2>;
			preview_high_speed_fps_mif = <DVFS_MIF_L4>;
			preview_high_speed_fps_i2c = <0>;
			preview_high_speed_fps_hpg = <1>;

			video_high_speed_60fps_int = <DVFS_INT_L4>;
			video_high_speed_60fps_cam = <DVFS_CAM_L2>;
			video_high_speed_60fps_mif = <DVFS_MIF_L4>;
			video_high_speed_60fps_i2c = <0>;
			video_high_speed_60fps_hpg = <1>;

			video_high_speed_120fps_int = <DVFS_INT_L4>;
			video_high_speed_120fps_cam = <DVFS_CAM_L2>;
			video_high_speed_120fps_mif = <DVFS_MIF_L4>;
			video_high_speed_120fps_i2c = <0>;
			video_high_speed_120fps_hpg = <6>;

			max_int = <DVFS_INT_L4>;
			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L0>;
			max_i2c = <0>;
			max_hpg = <1>;
		};
	};
};

/* fimc_is_sensor0 - XMIPI_CSI4LA */
&fimc_is_sensor0 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <0>;
	csi_ch = <1>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "okay";

	use_ssvc1_internal;
};

/* fimc_is_sensor1 - XMIPI_CSI4LB */
&fimc_is_sensor1 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <1>;
	csi_ch = <0>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "okay";
};

/* fimc_is_sensor2 - XMIPI_CSI4LC */
&fimc_is_sensor2 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <3>;
	csi_ch = <2>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "disabled";
};

/* fimc_is_sensor3 - XMIPI_CSI2L */
&fimc_is_sensor3 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <2>;
		csi_ch = <3>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		is_flite = <0>;
		status = "okay";
	};

/* hsi2c_0: hsi2c@138A0000 */
&hsi2c_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 0 0 &gpc1 1 0>;	/* SDA - SCL */
	status = "okay";
	clock-frequency = <400000>;

	samsung,scl-extended-low-period;
	samsung,reset-before-trans;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c0_bus>;

	fimc-is-3p8sp@20 {
		compatible = "samsung,exynos5-fimc-is-cis-3p8sp";
		reg = <0x10>;              /* 1 bit right shift */
		id = <1>;                  /* matching fimc_is_sensor id */
		sensor_f_number = <200>;   /* f number 2.0 */
		setfile = "setB";
		use_initial_ae;            /* for initial AE of face unlock */
	};

	fimc-is-imx471@1A {
		compatible = "samsung,exynos5-fimc-is-cis-imx471-front";
		reg = <0x1A>;              /* 1 bit right shift */
		id = <1>;                  /* matching fimc_is_sensor id */
		sensor_f_number = <200>;   /* f number 2.0 */
		setfile = "setB";
	};
};

/* hsi2c_1: hsi2c@138B0000 */
&hsi2c_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 2 0 &gpc1 3 0>;	/* SDA - SCL */
	status = "okay";
	clock-frequency = <400000>;

	samsung,scl-extended-low-period;
	samsung,reset-before-trans;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c1_bus>;

	fimc-is-2p6@5A {
		compatible = "samsung,exynos5-fimc-is-cis-2p6";
		reg = <0x2d>;              /* 1 bit right shift */
		id = <0>;                  /* matching fimc_is_sensor id */
		sensor_f_number = <170>;   /* f number 1.7 */
		use_pdaf;
		setfile = "setB";
	};
};

/* hsi2c_2: hsi2c@138C0000 */
&hsi2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 4 0 &gpc1 5 0>;
	status = "okay";
	clock-frequency = <400000>;

	samsung,scl-extended-low-period;
	samsung,reset-before-trans;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c2_bus>;

	fimc-is-5e9@20 {
		compatible = "samsung,exynos5-fimc-is-cis-5e9";
		reg = <0x10>;              /* 1 bit right shift */
		id = <2>;                  /* matching fimc_is_sensor id */
		sensor_f_number = <220>;   /* f number 2.2 */
		setfile = "setB";
	};
};

/* hsi2c_3: hsi2c@138D0000 */
&hsi2c_3 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 6 0 &gpc1 7 0>;	/* SDA - SCL */
	status = "okay";
	clock-frequency = <400000>;

	samsung,scl-extended-low-period;
	samsung,reset-before-trans;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c3_bus>;

	fimc-is-actuator@18 {
		compatible = "samsung,exynos5-fimc-is-actuator-zc535";
		reg = <0x0C>;
		id = <0>;
		place = <0>;
	};

	rear_eeprom@B0 {
		compatible = "samsung,rear-eeprom-i2c";
		reg = <0x58>;		/* 7bit-addr */
	};

	front_eeprom@A2 {
		compatible = "samsung,front-eeprom-i2c";
		reg = <0x51>;		/* 7bit-addr */
	};

	rear2_eeprom@A0 {
		compatible = "samsung,rear2-eeprom-i2c";
		reg = <0x50>;		/* 7bit-addr */
	};
};

&i2c_1 {
	s2mu106@3D {
		flash_led {
			status = "okay";

			default_current = <50>;
			max_current = <200>;
			default_timer = <0>;
			flash-gpio = <&gpg2 7 0>;
			torch-gpio = <&gpg1 7 0>;

			flash_current = <1500>;
			preflash_current = <200>;
			movie_current = <200>;
			torch_current = <90>;
			factory_current = <350>;
			//front_torch_current = <300>;
			flashlight_current = <50 75 125 175 250>;

			s2mu106-channel1 {
				id = <0>;
				/*
				current = <100>;
				timer = <200>;
				*/
			};
		};
	};
};

