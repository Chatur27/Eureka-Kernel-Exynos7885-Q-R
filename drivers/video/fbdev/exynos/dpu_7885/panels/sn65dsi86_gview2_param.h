#ifndef __SN65DSI86_GVIEW2_PARAM_H__
#define __SN65DSI86_GVIEW2_PARAM_H__
#include <linux/types.h>
#include <linux/kernel.h>

#define EXTEND_BRIGHTNESS	306
#define UI_MAX_BRIGHTNESS	255
#define UI_DEFAULT_BRIGHTNESS	128

struct lcd_seq_info {
	unsigned char	*cmd;
	unsigned int	len;
	unsigned int	sleep;
};

enum {
	AUX_CMD_I2C_OVER_AUX_W_MOT_0	= 0,
	AUX_CMD_I2C_OVER_AUX_R_MOT_0	= 1,
	AUX_CMD_I2C_OVER_AUX_U_MOT_0	= 2,
	AUX_CMD_RESERVED_1		= 3,

	AUX_CMD_I2C_OVER_AUX_W_MOT_1	= 4,
	AUX_CMD_I2C_OVER_AUX_R_MOT_1	= 5,
	AUX_CMD_I2C_OVER_AUX_U_MOT_1	= 6,
	AUX_CMD_RESERVED_2		= 7,

	AUX_CMD_NATIVE_AUX_W		= 8,
	AUX_CMD_NATIVE_AUX_R		= 9,
};

#define TYPE_WRITE	I2C_SMBUS_WRITE
#define TYPE_DELAY	U8_MAX
#define TYPE_CHECK	(TYPE_DELAY - 1)

static u8 SN65DSI86_INIT[] = {
	TYPE_WRITE, 0xFF, 0x07,	/* PAGE_SELECT */
	TYPE_WRITE, 0x16, 0x01,	/* ASSR_OVERRIDE */
	TYPE_WRITE, 0xFF, 0x00,	/* PAGE_SELECT */
	TYPE_WRITE, 0x0A, 0x04,	/* DP_PLL_LOCK, REFCLK_FREQ, DPPLL_CLK_SRC */
	TYPE_WRITE, 0x10, 0x26,	/* LEFT_RIGHT_PIXELS, DSI_CHANNEL_MODE, CHA_DSI_LANES, CHB_DSI_LANES, SOT_ERR_TOL_DIS */
	TYPE_WRITE, 0x12, 0x5D,	/* CHA_DSI_CLK_RANGE */					/* 465 <= frequency < 470 MHz */
	TYPE_WRITE, 0x13, 0x5D,	/* CHB_DSI_CLK_RANGE */					/* 465 <= frequency < 470 MHz */
	TYPE_WRITE, 0x5C, 0x01,	/* HPD_DISABLE */
	TYPE_WRITE, 0x94, 0x80,	/* DP_DATARATE, DP_ERC, DP_TX_SWING */
	TYPE_WRITE, 0x0D, 0x01,	/* DP_PLL_EN */
	TYPE_DELAY, 0x0A, 0x00,
	/* TYPE_CHECK, 0x0A, BIT(7), */
	TYPE_WRITE, 0x5A, 0x05,	/* ML3_POLR, ML2_POLR, ML1_POLR, ML0_POLR, VSTREAM_ENABLE, ENH_FRAME_ENABLE, ASSR_CONTROL */
	TYPE_WRITE, 0x93, 0x60,	/* DP_PRE_EMPHASIS, DP_NUM_LANES, SSC_SPREAD, SSC_ENABLE */
#if 1
	TYPE_WRITE, 0x96, 0x0A,	/* ML_TX_MODE: 1010 = Semi-Auto Link Training */
#else
	TYPE_WRITE, 0x96, 0x09,	/* ML_TX_MODE: 1001 = Fast Link Training */
#endif
	TYPE_DELAY, 0x14, 0x00,
	/* TYPE_CHECK, 0xF8, BIT(1) | BIT(0), */
	TYPE_WRITE, 0x20, 0x80,	/* CHA_ACTIVE_LINE_LENGTH_LOW */
	TYPE_WRITE, 0x21, 0x07,	/* CHA_ACTIVE_LINE_LENGTH_HIGH */
	TYPE_WRITE, 0x22, 0x00,	/* CHB_ACTIVE_LINE_LENGTH_LOW */
	TYPE_WRITE, 0x23, 0x00,	/* CHB_ACTIVE_LINE_LENGTH_HIGH */
	TYPE_WRITE, 0x24, 0x38,	/* CHA_VERTICAL_DISPLAY_SIZE_LOW */
	TYPE_WRITE, 0x25, 0x04,	/* CHA_VERTICAL_DISPLAY_SIZE_HIGH */
	TYPE_WRITE, 0x2C, 0x20,	/* CHA_HSYNC_PULSE_WIDTH_LOW */			/* HSA:	32 */
	TYPE_WRITE, 0x2D, 0x00,	/* CHA_HSYNC_POLARITY, CHA_HSYNC_PULSE_WIDTH_HIGH */
	TYPE_WRITE, 0x30, 0x06,	/* CHA_VSYNC_PULSE_WIDTH_LOW */			/* VSA:	6 */
	TYPE_WRITE, 0x31, 0x00,	/* CHA_VSYNC_POLARITY, CHA_VSYNC_PULSE_WIDTH_HIGH */
	TYPE_WRITE, 0x34, 0x8E,	/* CHA_HORIZONTAL_BACK_PORCH */			/* HBP:	142 */
	TYPE_WRITE, 0x36, 0x0D,	/* CHA_VERTICAL_BACK_PORCH */				/* VBP:	13 */
	TYPE_WRITE, 0x38, 0x30,	/* CHA_HORIZONTAL_FRONT_PORCH */			/* HFP:	48 */
	TYPE_WRITE, 0x3A, 0x03,	/* CHA_VERTICAL_FRONT_PORCH */				/* VFP:	3 */
	TYPE_WRITE, 0x5B, 0x00,	/* ENCH_FRAME_PATT, DP_18BPP_EN */
	TYPE_WRITE, 0x3C, 0x00,	/* COLOR_BAR_EN, COLOR_BAR_PATTERN */
	TYPE_WRITE, 0x5A, 0x0D,	/* ML3_POLR, ML2_POLR, ML1_POLR, ML0_POLR, VSTREAM_ENABLE, ENH_FRAME_ENABLE, ASSR_CONTROL */
};

static u8 LP8558_INIT[] = {
	0x98, 0x01,
	0x9E, 0x21,
	0xA0, 0xC2,
	0xA1, 0x5D,
	0xA2, 0x28,
	0xA3, 0x42,
	0xA4, 0x72,
	0xA5, 0x04,
	0xA6, 0x40,
	0xA7, 0xF7,
	0xA8, 0x24,
	0xA9, 0xA0,
	0xAA, 0x0F,
	0xAE, 0x0E,
	0x01, 0x80,
};

/* platform brightness <-> bl reg */
static unsigned int brightness_table[EXTEND_BRIGHTNESS + 1] = {
	0,
	2, 2, 3, 4, 5, 5, 6, 7, 8, 8,
	9, 10, 11, 12, 12, 13, 14, 15, 15, 16,
	17, 18, 18, 19, 20, 21, 22, 22, 23, 24,
	25, 25, 26, 27, 28, 29, 29, 30, 31, 32,
	32, 33, 34, 35, 35, 36, 37, 38, 39, 39,
	40, 41, 42, 42, 43, 44, 45, 45, 46, 47,
	48, 49, 49, 50, 51, 52, 52, 53, 54, 55,
	56, 56, 57, 58, 59, 59, 60, 61, 62, 62,
	63, 64, 65, 66, 66, 67, 68, 69, 69, 70,
	71, 72, 72, 73, 74, 75, 76, 76, 77, 78,
	79, 79, 80, 81, 82, 83, 83, 84, 85, 86,
	86, 87, 88, 89, 89, 90, 91, 92, 93, 93,
	94, 95, 96, 96, 97, 98, 99, 100, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 255,
};

#endif /* __SN65DSI86_GVIEW2_PARAM_H__ */
