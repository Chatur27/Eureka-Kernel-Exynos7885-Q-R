/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2016 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_CIS_IMX471_SET_A_H
#define FIMC_IS_CIS_IMX471_SET_A_H

#include "fimc-is-cis.h"
#include "fimc-is-cis-imx471.h"

const u32 sensor_imx471_setfile_A_Global[] = {
	//External Clock Setting
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	//Register version
	0x3C7E, 0x07, 0x01,
	0x3C7F, 0x05, 0x01,
	//Global Setting
	0x3E35, 0x00, 0x01,
	0x3E36, 0x00, 0x01,
	0x3E37, 0x00, 0x01,
	0x3F7F, 0x01, 0x01,
	0x4431, 0x04, 0x01,
	0x531C, 0x01, 0x01,
	0x531D, 0x02, 0x01,
	0x531E, 0x04, 0x01,
	0x5928, 0x00, 0x01,
	0x5929, 0x2F, 0x01,
	0x592A, 0x00, 0x01,
	0x592B, 0x85, 0x01,
	0x592C, 0x00, 0x01,
	0x592D, 0x32, 0x01,
	0x592E, 0x00, 0x01,
	0x592F, 0x88, 0x01,
	0x5930, 0x00, 0x01,
	0x5931, 0x3D, 0x01,
	0x5932, 0x00, 0x01,
	0x5933, 0x93, 0x01,
	0x5938, 0x00, 0x01,
	0x5939, 0x24, 0x01,
	0x593A, 0x00, 0x01,
	0x593B, 0x7A, 0x01,
	0x593C, 0x00, 0x01,
	0x593D, 0x24, 0x01,
	0x593E, 0x00, 0x01,
	0x593F, 0x7A, 0x01,
	0x5940, 0x00, 0x01,
	0x5941, 0x2F, 0x01,
	0x5942, 0x00, 0x01,
	0x5943, 0x85, 0x01,
	0x5F0E, 0x6E, 0x01,
	0x5F11, 0xC6, 0x01,
	0x5F17, 0x5E, 0x01,
	0x7990, 0x01, 0x01,
	0x7993, 0x5D, 0x01,
	0x7994, 0x5D, 0x01,
	0x7995, 0xA1, 0x01,
	0x799A, 0x01, 0x01,
	0x799D, 0x00, 0x01,
	0x8169, 0x01, 0x01,
	0x8359, 0x01, 0x01,
	0x9302, 0x1E, 0x01,
	0x9306, 0x1F, 0x01,
	0x930A, 0x26, 0x01,
	0x930E, 0x23, 0x01,
	0x9312, 0x23, 0x01,
	0x9316, 0x2C, 0x01,
	0x9317, 0x19, 0x01,
	0xB046, 0x01, 0x01,
	0xB048, 0x01, 0x01,
};

/*
 * [Mode Information]
 *	0: 4608 x 3456 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	1: 4608 x 2592 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	2: 4608 x 2240 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	3: 4608 x 2176 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	4: 3456 x 3456 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	5: 2304 x 1728 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	6: 2304 x 1728 @60,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	7: 2304 x 1296 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	8: 2304 x 1120 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	9: 2304 x 1088 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	10: 1728 x 1728 @30,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 *	11: 1152 x 648 @120,  MIPI lane: 4, MIPI data rate(Mbps/lane) Sensor: 1456, MIPI Mclk(Mhz): 26
 */

const u32 sensor_imx471_setfile_A_4608x3456_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0D, 0x01,
	0x0341, 0xB6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x14, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0D, 0x01,
	0x034B, 0x93, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x18, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x12, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x0D, 0x01,
	0x040F, 0x80, 0x01,	
	//Output Size Setting
	0x034C, 0x12, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x0D, 0x01,
	0x034F, 0x80, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0D, 0x01,
	0x0203, 0xA4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_4608x2592_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0xC4, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0xE3, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x18, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x12, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x0A, 0x01,
	0x040F, 0x20, 0x01,	
	//Output Size Setting
	0x034C, 0x12, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x0A, 0x01,
	0x034F, 0x20, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_4608x2240_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0x74, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x33, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x18, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x12, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x08, 0x01,
	0x040F, 0xC0, 0x01,	
	//Output Size Setting
	0x034C, 0x12, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0xC0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_4608x2176_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0x94, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x13, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x18, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x12, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x08, 0x01,
	0x040F, 0x80, 0x01,	
	//Output Size Setting
	0x034C, 0x12, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0x80, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_3824x2868_30fps[] = {
	 //MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x38, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0C, 0x01,
	0x034B, 0x6B, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x01, 0x01,
	0x0409, 0xA0, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0E, 0x01,
	0x040D, 0xF0, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0x34, 0x01,	
	//Output Size Setting
	0x034C, 0x0E, 0x01,
	0x034D, 0xF0, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0x34, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_3824x2152_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0xA0, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x07, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x01, 0x01,
	0x0409, 0xA0, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0E, 0x01,
	0x040D, 0xF0, 0x01,
	0x040E, 0x08, 0x01,
	0x040F, 0x68, 0x01,	
	//Output Size Setting
	0x034C, 0x0E, 0x01,
	0x034D, 0xF0, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0x68, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_3824x1764_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x03, 0x01,
	0x0347, 0x38, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0A, 0x01,
	0x034B, 0x6B, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x01, 0x01,
	0x0409, 0xA0, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x28, 0x01,
	0x040C, 0x0E, 0x01,
	0x040D, 0xF0, 0x01,
	0x040E, 0x06, 0x01,
	0x040F, 0xE4, 0x01,	
	//Output Size Setting
	0x034C, 0x0E, 0x01,
	0x034D, 0xF0, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xE4, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_3456x3456_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0D, 0x01,
	0x0341, 0xB6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x14, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0D, 0x01,
	0x034B, 0x93, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x02, 0x01,
	0x0409, 0x58, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0D, 0x01,
	0x040D, 0x80, 0x01,
	0x040E, 0x0D, 0x01,
	0x040F, 0x80, 0x01,	
	//Output Size Setting
	0x034C, 0x0D, 0x01,
	0x034D, 0x80, 0x01,
	0x034E, 0x0D, 0x01,
	0x034F, 0x80, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0D, 0x01,
	0x0203, 0xA4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2864x2864_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0B, 0x01,
	0x0341, 0xE6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x3C, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0C, 0x01,
	0x034B, 0x6B, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3F4C, 0x01, 0x01,
	0x3F4D, 0x01, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x03, 0x01,
	0x0409, 0x80, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0B, 0x01,
	0x040D, 0x30, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0x30, 0x01,	
	//Output Size Setting
	0x034C, 0x0B, 0x01,
	0x034D, 0x30, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0x30, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x0A, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x18, 0x01,
	0x5F0A, 0xB2, 0x01,
	0x0B06, 0x01, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x0B, 0x01,
	0x0203, 0xD4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2304x1728_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x07, 0x01,
	0x0341, 0x0C, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0D, 0x01,
	0x034B, 0xA7, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x0C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x0A, 0x01,
	0x040C, 0x09, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x06, 0x01,
	0x040F, 0xC0, 0x01,	
	//Output Size Setting
	0x034C, 0x09, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xC0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x80, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x04, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xD8, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x06, 0x01,
	0x0203, 0xFA, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2304x1728_60fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x0A, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x07, 0x01,
	0x0341, 0x0C, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x14, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0D, 0x01,
	0x034B, 0x93, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x0C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x09, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x06, 0x01,
	0x040F, 0xC0, 0x01, 
	//Output Size Setting
	0x034C, 0x09, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xC0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x80, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x04, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xD8, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3F78, 0x01, 0x01,
	0x3F79, 0x31, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x8A, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x06, 0x01,
	0x0203, 0xFA, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2304x1296_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0xBC, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0xEB, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x0C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x04, 0x01,
	0x040C, 0x09, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x05, 0x01,
	0x040F, 0x10, 0x01,	
	//Output Size Setting
	0x034C, 0x09, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x05, 0x01,
	0x034F, 0x10, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2304x1120_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0x74, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x33, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x0C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x09, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x04, 0x01,
	0x040F, 0x60, 0x01,	
	//Output Size Setting
	0x034C, 0x09, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x04, 0x01,
	0x034F, 0x60, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_2304x1088_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0x94, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x13, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0x0C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x09, 0x01,
	0x040D, 0x00, 0x01,
	0x040E, 0x04, 0x01,
	0x040F, 0x40, 0x01, 
	//Output Size Setting
	0x034C, 0x09, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x04, 0x01,
	0x034F, 0x40, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1920x1440_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x34, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0C, 0x01,
	0x034B, 0x73, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0xCC, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x07, 0x01,
	0x040D, 0x80, 0x01,
	0x040E, 0x05, 0x01,
	0x040F, 0xA0, 0x01,	
	//Output Size Setting
	0x034C, 0x07, 0x01,
	0x034D, 0x80, 0x01,
	0x034E, 0x05, 0x01,
	0x034F, 0xA0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1920x1080_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x02, 0x01,
	0x0347, 0x9C, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0B, 0x01,
	0x034B, 0x0B, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0xCC, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x07, 0x01,
	0x040D, 0x80, 0x01,
	0x040E, 0x04, 0x01,
	0x040F, 0x38, 0x01,	
	//Output Size Setting
	0x034C, 0x07, 0x01,
	0x034D, 0x80, 0x01,
	0x034E, 0x04, 0x01,
	0x034F, 0x38, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1920x888_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x03, 0x01,
	0x0347, 0x3C, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0A, 0x01,
	0x034B, 0x6B, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x00, 0x01,
	0x0409, 0xCC, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x10, 0x01,
	0x040C, 0x07, 0x01,
	0x040D, 0x80, 0x01,
	0x040E, 0x03, 0x01,
	0x040F, 0x78, 0x01,	
	//Output Size Setting
	0x034C, 0x07, 0x01,
	0x034D, 0x80, 0x01,
	0x034E, 0x03, 0x01,
	0x034F, 0x78, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1728x1728_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x07, 0x01,
	0x0341, 0x0C, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0D, 0x01,
	0x034B, 0xA7, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x01, 0x01,
	0x0409, 0x2C, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x0A, 0x01,
	0x040C, 0x06, 0x01,
	0x040D, 0xC0, 0x01,
	0x040E, 0x06, 0x01,
	0x040F, 0xC0, 0x01, 
	//Output Size Setting
	0x034C, 0x06, 0x01,
	0x034D, 0xC0, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xC0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x80, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x04, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xD8, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x06, 0x01,
	0x0203, 0xFA, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1440x1440_30fps[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x14, 0x01,
	0x0343, 0x00, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x05, 0x01,
	0x0341, 0xF2, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x34, 0x01,
	0x0348, 0x12, 0x01,
	0x0349, 0x2F, 0x01,
	0x034A, 0x0C, 0x01,
	0x034B, 0x73, 0x01,
	//Mode Setting
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3F4C, 0x81, 0x01,
	0x3F4D, 0x81, 0x01,
	//Digital Crop & Scaling
	0x0408, 0x01, 0x01,
	0x0409, 0xBC, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x05, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x05, 0x01,
	0x040F, 0xA0, 0x01,	
	//Output Size Setting
	0x034C, 0x05, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x05, 0x01,
	0x034F, 0xA0, 0x01,
	//Clock Setting
	0x0301, 0x06, 0x01,
	0x0303, 0x04, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0xD8, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x02, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x22, 0x01,
	0x0310, 0x00, 0x01,
	//Other Setting
	0x3F78, 0x02, 0x01,
	0x3F79, 0x3B, 0x01,
	0x3FFE, 0x00, 0x01,
	0x3FFF, 0x2C, 0x01,
	0x5F0A, 0xB6, 0x01,
	0x0B06, 0x00, 0x01,
	0xBCF1, 0x00, 0x01,
	//Integration Setting
	0x0202, 0x05, 0x01,
	0x0203, 0xE0, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x00,
	0x0205, 0x00, 0x00,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x00,
};

const u32 sensor_imx471_setfile_A_1152x648_120fps[] = {
	0xFCFC,	0x4000,	0x02,
	0x6214,	0x7971,	0x02,
	0x6218,	0x7150,	0x02,
	0x0136,	0x1A00,	0x02,
	0x0304,	0x0007,	0x02,
	0x0306,	0x0071,	0x02,
	0x030E,	0x0070,	0x02,
	0x3644,	0x008B,	0x02,
	0x0344,	0x0498,	0x02,
	0x0348,	0x0D97,	0x02,
	0x0346,	0x0448,	0x02,
	0x034A,	0x0957,	0x02,
	0x034C,	0x0480,	0x02,
	0x034E,	0x0288,	0x02,
	0x0342,	0x1400,	0x02,
	0x0340,	0x038F,	0x02,
	0x0202,	0x0200,	0x02,
	0x0200,	0x0618,	0x02,
	0x0900,	0x0112,	0x02,
	0x0380,	0x0001,	0x02,
	0x0382,	0x0001,	0x02,
	0x0384,	0x0003,	0x02,
	0x0386,	0x0001,	0x02,
	0x0400,	0x0001,	0x02,
	0x0404,	0x0020,	0x02,
	0x317A,	0x0045,	0x02,
	0x36C4,	0xFFE6,	0x02,
	0x36C6,	0xFFE6,	0x02,
	0x36C8,	0xFFE6,	0x02,
	0x36CA,	0xFFE6,	0x02,
	0x36CC,	0xFFE6,	0x02,
	0x36CE,	0xFFE6,	0x02,
	0x36D0,	0xFFE6,	0x02,
	0x36D2,	0xFFE6,	0x02,
	0x36D4,	0xFFE6,	0x02,
	0x36D6,	0xFFE6,	0x02,
	0x36D8,	0xFFE6,	0x02,
	0x36DA,	0xFFE6,	0x02,
	0x36DC,	0xFFE6,	0x02,
	0x36DE,	0xFFE6,	0x02,
	0x36E0,	0xFFE6,	0x02,
	0x36E2,	0xFFE6,	0x02,
};


const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_4608x3456_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3510,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_4608x2592_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_4608x2240_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_4608x2176_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_3824x2868_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_3824x2152_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_3824x1764_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3046,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_3456x3456_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3510,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2864x2864_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	117000000 * 4,               /* pclk = VTPXCK x 4 */
	3510,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2304x1728_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	69330000 * 4,               /* pclk = VTPXCK x 4 */
	1804,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2304x1728_60fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	69330000 * 4,               /* pclk = VTPXCK x 4 */
	1804,                        /* frame_length_lines */
	2560,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2304x1296_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2304x1120_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_2304x1088_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1920x1440_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1920x1080_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1920x888_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1728x1728_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1804,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1440x1440_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx471_pllinfo_A_1152x648_120fps = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1404000000,                  /* mipi_datarate = OPSYCK */
	58500000 * 4,               /* pclk = VTPXCK x 4 */
	1522,                        /* frame_length_lines */
	5120,                        /* line_length_pck */
};

static const u32 *sensor_imx471_setfiles_A[] = {
	sensor_imx471_setfile_A_4608x3456_30fps,
	sensor_imx471_setfile_A_4608x2592_30fps,
	sensor_imx471_setfile_A_4608x2240_30fps,
	sensor_imx471_setfile_A_4608x2176_30fps,
	sensor_imx471_setfile_A_3824x2868_30fps,
	sensor_imx471_setfile_A_3824x2152_30fps,
	sensor_imx471_setfile_A_3824x1764_30fps,
	sensor_imx471_setfile_A_3456x3456_30fps,
	sensor_imx471_setfile_A_2864x2864_30fps,
	sensor_imx471_setfile_A_2304x1728_30fps,
	sensor_imx471_setfile_A_2304x1728_60fps,
	sensor_imx471_setfile_A_2304x1296_30fps,
	sensor_imx471_setfile_A_2304x1120_30fps,
	sensor_imx471_setfile_A_2304x1088_30fps,
	sensor_imx471_setfile_A_1920x1440_30fps,
	sensor_imx471_setfile_A_1920x1080_30fps,
	sensor_imx471_setfile_A_1920x888_30fps,
	sensor_imx471_setfile_A_1728x1728_30fps,
	sensor_imx471_setfile_A_1440x1440_30fps,
};

static const u32 sensor_imx471_setfile_A_sizes[] = {
	ARRAY_SIZE(sensor_imx471_setfile_A_4608x3456_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_4608x2592_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_4608x2240_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_4608x2176_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_3824x2868_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_3824x2152_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_3824x1764_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_3456x3456_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2864x2864_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2304x1728_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2304x1728_60fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2304x1296_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2304x1120_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_2304x1088_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_1920x1440_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_1920x1080_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_1920x888_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_1728x1728_30fps),
	ARRAY_SIZE(sensor_imx471_setfile_A_1440x1440_30fps),
};

static const struct sensor_pll_info_compact *sensor_imx471_pllinfos_A[] = {
	&sensor_imx471_pllinfo_A_4608x3456_30fps,
	&sensor_imx471_pllinfo_A_4608x2592_30fps,
	&sensor_imx471_pllinfo_A_4608x2240_30fps,
	&sensor_imx471_pllinfo_A_4608x2176_30fps,
	&sensor_imx471_pllinfo_A_3824x2868_30fps,
	&sensor_imx471_pllinfo_A_3824x2152_30fps,
	&sensor_imx471_pllinfo_A_3824x1764_30fps,
	&sensor_imx471_pllinfo_A_3456x3456_30fps,
	&sensor_imx471_pllinfo_A_2864x2864_30fps,
	&sensor_imx471_pllinfo_A_2304x1728_30fps,
	&sensor_imx471_pllinfo_A_2304x1728_60fps,
	&sensor_imx471_pllinfo_A_2304x1296_30fps,
	&sensor_imx471_pllinfo_A_2304x1120_30fps,
	&sensor_imx471_pllinfo_A_2304x1088_30fps,
	&sensor_imx471_pllinfo_A_1920x1440_30fps,
	&sensor_imx471_pllinfo_A_1920x1080_30fps,
	&sensor_imx471_pllinfo_A_1920x888_30fps,
	&sensor_imx471_pllinfo_A_1728x1728_30fps,
	&sensor_imx471_pllinfo_A_1440x1440_30fps,
};
#endif
